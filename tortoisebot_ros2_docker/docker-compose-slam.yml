version: '3.7'
services:

  tortoisebot-ros2-slam:
    image: peerajakcp22/tortoisebot-ros2-slam:v1
    container_name: tortoisebot-ros2-slam
    network_mode: host
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
      - DISPLAY=${DISPLAY} 
    command: bash -c "source /tortoisebot_ws/devel/setup.bash && ros2 launch tortoisebot_bringup autobringup.launch.py use_sim_time:=True exploration:=True"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix        
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]


  rosbridge:
    image: peerajakcp22/tortoisebot-ros1-waypoints:v1
    container_name: rosbridge2
    network_mode: host
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
    command: bash -c "source /tortoisebot_ws/devel/setup.bash && sleep 3 &&roslaunch course_web_dev_ros web.launch"

  tf2_web:
    image: peerajakcp22/tortoisebot-ros1-waypoints:v1
    container_name: tf2_web2
    network_mode: host
    depends_on:
      tortoisebot-ros2-slam:
        condition: service_started
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
    command: bash -c "source /tortoisebot_ws/devel/setup.bash && sleep 3 &&roslaunch course_web_dev_ros tf2_web.launch"

  action-server:
    image: peerajakcp22/tortoisebot-ros1-waypoints:v1
    container_name: action-server2
    network_mode: host
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
    command: bash -c "source /tortoisebot_ws/devel/setup.bash && sleep 3 &&rosrun course_web_dev_ros tortoisebot_action_server.py"

  web-server:
    image: peerajakcp22/tortoisebot-ros1-webapp:v1
    container_name: web-server2
    network_mode: host
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
    ports:
      - 8001:8001
    command: "entrypoint.sh"













